{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vmAdminUsername": {
        "type": "String"
      },
      "vmAdminPassword": {
        "type": "SecureString"
      },
      "azureUsername": {
        "type": "string"
      },
      "azurePassword": {
        "type": "securestring"
      },
      "odlId": {
        "type": "string"
      },
      "hostPoolName": {
        "type": "string",
        "defaultValue": "LabVMs-HostPool"
      },
      "hostpoolToken": {
        "type": "string",
        "defaultValue": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4MkNGNDc0MzUwRkU3MkY5M0E2NzczOEFBRjQ0Qzg4QkFFMjI0QUIiLCJ0eXAiOiJKV1QifQ.eyJSZWdpc3RyYXRpb25JZCI6IjRmMjEzMTUyLTE0ZjctNDUxMC1hMDVjLTVhNjM3NmE0MGYxNyIsIkJyb2tlclVyaSI6Imh0dHBzOi8vcmRicm9rZXItZy11cy1yMC53dmQubWljcm9zb2Z0LmNvbS8iLCJEaWFnbm9zdGljc1VyaSI6Imh0dHBzOi8vcmRkaWFnbm9zdGljcy1nLXVzLXIwLnd2ZC5taWNyb3NvZnQuY29tLyIsIkVuZHBvaW50UG9vbElkIjoiOWJiNGUyYzktMDI2Ni00NDQwLWI2MjctNmE4NWY1NTc1MDQzIiwiR2xvYmFsQnJva2VyVXJpIjoiaHR0cHM6Ly9yZGJyb2tlci53dmQubWljcm9zb2Z0LmNvbS8iLCJHZW9ncmFwaHkiOiJVUyIsIm5iZiI6MTU5ODI2OTIyMiwiZXhwIjoxNjAwNTQwMjAwLCJpc3MiOiJSREluZnJhVG9rZW5NYW5hZ2VyIiwiYXVkIjoiUkRtaSJ9.eRZ5GKhgaHvrOH2MLqA7ozC4wr6HOOrznIQyXV4bMoHyfTfa5NsrS7vKW_KVhZEjVAUQtJWSrbli7kgXfI4nfkZkJplqDTJAG9Uns0dYySLiUVTq0G5TPqhmx6R9hUVNjLAXZ3yKHWhuGc4Xcxr-ccUnNzkxf0U3BM1CjhdCJu5YekYg8Dzdu59KXfmida3XhZOFOxxd2falJUKy5ho9FB9Kf-oRTvgX964F1xLYWpO0Irjo9piaGcC-tbkGAwpFoxPmxjnSCIA8pilbW8bRmTXvkR-ckKdldGReAr79jvZhxNFuGX8BU6y3hK7sL2rQSjMa9Qi8xhSNQpM2V5X61Q"
      },
      "deploymentId": {
        "type": "string"
      }
    },
    "variables": {
      "postInstallParameters": "[concat(' -azureUsername ', parameters('azureUsername'), ' -azurePassword ', parameters('azurePassword'), ' -azureTenantID ', variables('azureTenantID'), ' -azureSubscriptionID ', variables('azureSubscriptionID'), ' -odlId ', parameters('odlId'), ' -deploymentId ', parameters('deploymentId'))]",
      "azureSubscriptionID": "[subscription().subscriptionId]",
      "azureTenantID": "[subscription().tenantId]",
      "rgName": "[resourceGroup().name]",
      "addressPrefix": "10.0.0.0/16",
      "networkInterfaceName": "labvm-nic",
      "networkSecurityGroupName": "labvm-nsg",
      "publicIpAddressDNSName": "[concat('labvm-', uniqueString(resourceGroup().id))]",
      "publicIpAddressName": "[concat('labvm-pip-', uniqueString(resourceGroup().id))]",
      "subnetName": "Subnet",
      "subnetPrefix": "10.0.0.0/24",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/',variables('virtualNetworkName'), variables('subnetName'))]",
      "virtualMachineSize": "Standard_D2s_v3",
      "virtualNetworkName": "labvm-vnet",
      "dscname":  "dscextension",
      "vmName": "[concat('labvm-',parameters('deploymentId'))]",
      "adlsStorageAccountName": "[concat('asadatalake', parameters('deploymentId'))]",
      "location": "[resourceGroup().location]"
    },
    "resources": [
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2017-04-01",
        "name": "[variables('virtualNetworkName')]",
        "location": "[variables('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetPrefix')]"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/publicIpAddresses",
        "apiVersion": "2017-08-01",
        "name": "[variables('publicIpAddressName')]",
        "location": "[variables('location')]",
        "properties": {
          "publicIpAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[concat(variables('publicIpAddressDNSName'))]"
          }
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2017-06-01",
        "name": "[variables('networkSecurityGroupName')]",
        "location": "[variables('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-rdp",
              "properties": {
                "priority": 110,
                "protocol": "TCP",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "3389"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2016-09-01",
        "name": "[variables('networkInterfaceName')]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
          "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "privateIPAllocationMethod": "Dynamic",
                "publicIpAddress": {
                  "id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                }
              }
            }
          ],
          "networkSecurityGroup": {
            "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2017-03-30",
        "name": "[variables('vmName')]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
        ],
        "properties": {
          "osProfile": {
            "computerName": "[variables('vmName')]",
            "adminUsername": "[parameters('vmAdminUsername')]",
            "adminPassword": "[parameters('vmAdminPassword')]",
            "windowsConfiguration": {
              "provisionVmAgent": "true"
            }
          },
          "hardwareProfile": {
            "vmSize": "[variables('virtualMachineSize')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "microsoftvisualstudio",
              "offer": "visualstudio2019latest",
              "sku": "vs-2019-ent-latest-ws2019",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "fromImage",
              "name": "[concat(variables('vmName'), '-osdisk')]",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": [
  
            ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
              }
            ]
          }
        },
         "resources": [
          {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),'/', 'winExtension')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "comments": "Script",
            "tags": {
              "displayName": "VM Extension"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName') , '/extensions/', variables('dscname'))]",
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
              ],
            "properties": {
              "publisher": "Microsoft.Compute",
              "type": "CustomScriptExtension",
              "typeHandlerVersion": "1.8",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "fileUris": [
                  "https://raw.githubusercontent.com/SpektraSystems/azure-synapse-analytics-workshop-400/master/artifacts/environment-setup/spektra/post-install-script01.ps1"
                ]
              },
              "protectedSettings": {
                "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File post-install-script01.ps1', variables('postInstallParameters'))]"
              }
            }
          },
          {
		"apiVersion": "2018-10-01",	  
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('vmName'), '/', 'dscextension')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.73",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "modulesUrl": "https://wvdportalstorageblob.blob.core.windows.net/galleryartifacts/Configuration.zip",
              "configurationFunction": "Configuration.ps1\\AddSessionHost",
              "properties": {
                "hostPoolName": "[parameters('hostPoolName')]",
                "registrationInfoToken": "[parameters('hostpoolToken')]"
              }
            }
          }
        }
        ]
      }
    ],
    "outputs": {
      "uniqueId": {
        "type": "String",
        "value": "[ parameters('deploymentId')]"
      },
      "Storage Account Name": {
        "type": "String",
        "value": "[variables('adlsStorageAccountName')]"
      },
      "LABVM Admin Username": {
        "type": "String",
        "value": "[parameters('vmAdminUsername')]"
      },
      "LABVM Admin Password": {
        "type": "String",
        "value": "[parameters('vmAdminPassword')]"
      },
      "LABVM DNS Name": {
        "type": "String",
        "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpAddressName'))).dnsSettings.fqdn]"
      }
    }
  }
